screens = list.files("C:/Users/peree/OneDrive/Desktop/cell_cycle")
screens
screen = "Screens_Cdc11"
root_dir = "C:/Users/peree/OneDrive/Desktop/cell_cycle"
paste(root_dir, screen, sep = "/")
screen_dir = paste(root_dir, screen, sep = "/")
plates = list.files(screen_dir)
plates
plate = "Cdc11_R1_Plate01"
print(plate)
start.time = Sys.time()
root_dir = "C:/Users/peree/OneDrive/Desktop/cell_cycle"
screens = list.files("C:/Users/peree/OneDrive/Desktop/cell_cycle")
# df skeleton
wt_cellcounts_df = data.frame(matrix(nrow = 0,
ncol = 12,
dimnames = list(c(), c("Marker",
"Plate",
"Total Num. Perimeter Cells",
"Total Num. HIS3 Cells",
"Bad Cells (Perimeter)",
"Bad Cells (HIS3)",
"No_NormalBad Cells (Perimeter)",
"No_NormalBad Cells (HIS3)",
"% Bad Cells (Perimeter)",
"% Bad Cells (HIS3)",
"% Bad + No_NormalBad Cells (Perimeter)",
"% Bad + No_NormalBad Cells (HIS3)"))))
# 76 wt coordinates
for (screen in screens) {
screen_dir = paste(root_dir, screen, sep = "/")
plates = list.files(screen_dir)
marker = strsplit(screen, split = "_")[[1]][2] # get marker name
total_wt = c()
bad_wt = c()
no_normalbad_wt = c()
for (plate in plates) {
classifications_path = paste(screen_dir, plate, "Predictions_normal_bad.csv", sep = "/")
classes = read.csv(file = classifications_path)
classes_his3_only = dplyr::filter(classes, classes$Name == "HIS3")
wt_top = dplyr::filter(classes, classes$Row == 1)
wt_bottom = dplyr::filter(classes, classes$Row == 16)
wt_left = dplyr::filter(classes, classes$Column == 1)
wt_left = dplyr::filter(wt_left, wt_left$Row != 1)
wt_left = dplyr::filter(wt_left, wt_left$Row != 16)
wt_right = dplyr::filter(classes, classes$Column == 24)
wt_right = dplyr::filter(wt_right, wt_right$Row != 1)
wt_right = dplyr::filter(wt_right, wt_right$Row != 16)
all_wt = data.frame(matrix(nrow = 0, ncol = 13, dimnames = list(c(), colnames(wt_top))))
all_wt = rbind(all_wt, wt_top, wt_bottom, wt_left, wt_right)
num_perimeter = nrow(all_wt)
num_his3 = nrow(classes_his3_only)
num_bad_perimeter = nrow(dplyr::filter(all_wt, all_wt$Prediction == 'bad'))
num_bad_his3 = nrow(dplyr::filter(classes_his3_only, classes_his3_only$Prediction == 'bad'))
num_no_normalbad_perimeter = nrow(dplyr::filter(all_wt, all_wt$Prediction == 'no_normalbad'))
num_no_normalbad_his3 = nrow(dplyr::filter(classes_his3_only, classes_his3_only$Prediction == 'no_normalbad'))
wt_cellcounts_df = rbind(wt_cellcounts_df, data.frame("Marker" = marker,
"Plate" = plate,
"Total Num. Perimeter Cells" = num_perimeter,
"Total Num. HIS3 Cells" = num_his3,
"Bad Cells (Perimeter)" = num_bad_perimeter,
"Bad Cells (HIS3)" = num_bad_his3,
"No_NormalBad Cells (Perimeter)" = num_no_normalbad_perimeter,
"No_NormalBad Cells (HIS3)" = num_no_normalbad_his3,
"% Bad Cells (Perimeter)" = (num_bad_perimeter/num_perimeter)*100,
"% Bad Cells (HIS3)" = (num_bad_his3/num_his3)*100,
"% Bad + No_NormalBad Cells (Perimeter)" = ((num_no_normalbad_perimeter + num_bad_perimeter)/num_perimeter)*100,
"% Bad + No_NormalBad Cells (HIS3)" = ((num_no_normalbad_his3 + num_bad_his3)/num_his3)*100))
print(plate)
}
}
colnames(wt_cellcounts_df) = c("Marker",
"Plate",
"Total Num. Perimeter Cells",
"Total Num. HIS3 Cells",
"Bad Cells (Perimeter)",
"Bad Cells (HIS3)",
"No_NormalBad Cells (Perimeter)",
"No_NormalBad Cells (HIS3)",
"% Bad Cells (Perimeter)",
"% Bad Cells (HIS3)",
"% Bad + No_NormalBad Cells (Perimeter)",
"% Bad + No_NormalBad Cells (HIS3)")
setwd("C:/Users/peree/OneDrive/Desktop/CompBio_Code/myra_tasks")
openxlsx::write.xlsx(wt_cellcounts_df, file = "wt_cellcounts_his3.xlsx")
end.time = Sys.time()
time.taken = end.time - start.time
time.taken
View(wt_cellcounts_df)
start.time = Sys.time()
root_dir = "C:/Users/peree/OneDrive/Desktop/cell_cycle"
screens = list.files("C:/Users/peree/OneDrive/Desktop/cell_cycle")
# df skeleton
wt_cellcounts_df = data.frame(matrix(nrow = 0,
ncol = 12,
dimnames = list(c(), c("Marker",
"Plate",
"Total Num. Perimeter Cells",
"Total Num. HIS3 Cells",
"Bad Cells (Perimeter)",
"Bad Cells (HIS3)",
"No_NormalBad Cells (Perimeter)",
"No_NormalBad Cells (HIS3)",
"% Bad Cells (Perimeter)",
"% Bad Cells (HIS3)",
"% Bad + No_NormalBad Cells (Perimeter)",
"% Bad + No_NormalBad Cells (HIS3)"))))
# 76 wt coordinates
for (screen in screens) {
screen_dir = paste(root_dir, screen, sep = "/")
plates = list.files(screen_dir)
marker = strsplit(screen, split = "_")[[1]][2] # get marker name
total_wt = c()
bad_wt = c()
no_normalbad_wt = c()
for (plate in plates) {
classifications_path = paste(screen_dir, plate, "Predictions_normal_bad.csv", sep = "/")
classes = read.csv(file = classifications_path)
classes_his3_only = dplyr::filter(classes, classes$Name == "HIS3")
wt_top = dplyr::filter(classes, classes$Row == 1)
wt_bottom = dplyr::filter(classes, classes$Row == 16)
wt_left = dplyr::filter(classes, classes$Column == 1)
wt_left = dplyr::filter(wt_left, wt_left$Row != 1)
wt_left = dplyr::filter(wt_left, wt_left$Row != 16)
wt_right = dplyr::filter(classes, classes$Column == 24)
wt_right = dplyr::filter(wt_right, wt_right$Row != 1)
wt_right = dplyr::filter(wt_right, wt_right$Row != 16)
all_wt = data.frame(matrix(nrow = 0, ncol = 13, dimnames = list(c(), colnames(wt_top))))
all_wt = rbind(all_wt, wt_top, wt_bottom, wt_left, wt_right)
num_perimeter = nrow(all_wt)
num_his3 = nrow(classes_his3_only)
num_bad_perimeter = nrow(dplyr::filter(all_wt, all_wt$Prediction == 'bad'))
num_bad_his3 = nrow(dplyr::filter(classes_his3_only, classes_his3_only$Prediction == 'bad'))
num_no_normalbad_perimeter = nrow(dplyr::filter(all_wt, all_wt$Prediction == 'no_normalbad'))
num_no_normalbad_his3 = nrow(dplyr::filter(classes_his3_only, classes_his3_only$Prediction == 'no_normalbad'))
wt_cellcounts_df = rbind(wt_cellcounts_df, data.frame("Marker" = marker,
"Plate" = plate,
"Total Num. Perimeter Cells" = num_perimeter,
"Total Num. HIS3 Cells" = num_his3,
"Bad Cells (Perimeter)" = num_bad_perimeter,
"Bad Cells (HIS3)" = num_bad_his3,
"No_NormalBad Cells (Perimeter)" = num_no_normalbad_perimeter,
"No_NormalBad Cells (HIS3)" = num_no_normalbad_his3,
"% Bad Cells (Perimeter)" = (num_bad_perimeter/num_perimeter)*100,
"% Bad Cells (HIS3)" = (num_bad_his3/num_his3)*100,
"% Bad + No_NormalBad Cells (Perimeter)" = ((num_no_normalbad_perimeter + num_bad_perimeter)/num_perimeter)*100,
"% Bad + No_NormalBad Cells (HIS3)" = ((num_no_normalbad_his3 + num_bad_his3)/num_his3)*100))
print(plate)
}
}
colnames(wt_cellcounts_df) = c("Marker",
"Plate",
"Total Num. Perimeter Cells",
"Total Num. HIS3 Cells",
"Bad Cells (Perimeter)",
"Bad Cells (HIS3)",
"No_NormalBad Cells (Perimeter)",
"No_NormalBad Cells (HIS3)",
"% Bad Cells (Perimeter)",
"% Bad Cells (HIS3)",
"% Bad + No_NormalBad Cells (Perimeter)",
"% Bad + No_NormalBad Cells (HIS3)")
setwd("C:/Users/peree/OneDrive/Desktop/CompBio_Code/myra_tasks")
openxlsx::write.xlsx(wt_cellcounts_df, file = "wt_cellcounts_his3.xlsx")
end.time = Sys.time()
time.taken = end.time - start.time
time.taken
openxlsx::write.xlsx(wt_cellcounts_df, file = "wt_cellcounts_his3.xlsx")
screens = c("Screens_Sac6", "Screens_Snf7", "Screens_Vph1")
wt_cellcounts_df = data.frame(matrix(nrow = 0,
ncol = 12,
dimnames = list(c(), c("Marker",
"Plate",
"Total Num. Perimeter Cells",
"Total Num. URA10 Cells",
"Bad Cells (Perimeter)",
"Bad Cells (URA10)",
"No_NormalBad Cells (Perimeter)",
"No_NormalBad Cells (URA10)",
"% Bad Cells (Perimeter)",
"% Bad Cells (URA10)",
"% Bad + No_NormalBad Cells (Perimeter)",
"% Bad + No_NormalBad Cells (URA10)"))))
screens = c("Screens_Sac6", "Screens_Snf7", "Screens_Vph1")
for (screen in screens) {
screen_dir = paste(root_dir, screen, sep = "/")
plates = list.files(screen_dir)
marker = strsplit(screen, split = "_")[[1]][2] # get marker name
total_wt = c()
bad_wt = c()
no_normalbad_wt = c()
for (plate in plates) {
classifications_path = paste(screen_dir, plate, "Predictions_normal_bad.csv", sep = "/")
classes = read.csv(file = classifications_path)
classes_ura10_only = dplyr::filter(classes, classes$Name == "URA10")
wt_top = dplyr::filter(classes, classes$Row == 1)
wt_bottom = dplyr::filter(classes, classes$Row == 16)
wt_left = dplyr::filter(classes, classes$Column == 1)
wt_left = dplyr::filter(wt_left, wt_left$Row != 1)
wt_left = dplyr::filter(wt_left, wt_left$Row != 16)
wt_right = dplyr::filter(classes, classes$Column == 24)
wt_right = dplyr::filter(wt_right, wt_right$Row != 1)
wt_right = dplyr::filter(wt_right, wt_right$Row != 16)
all_wt = data.frame(matrix(nrow = 0, ncol = 13, dimnames = list(c(), colnames(wt_top))))
all_wt = rbind(all_wt, wt_top, wt_bottom, wt_left, wt_right)
num_perimeter = nrow(all_wt)
num_ura10 = nrow(classes_ura10_only)
num_bad_perimeter = nrow(dplyr::filter(all_wt, all_wt$Prediction == 'bad'))
num_bad_ura10 = nrow(dplyr::filter(classes_his3_only, classes_his3_only$Prediction == 'bad'))
num_no_normalbad_perimeter = nrow(dplyr::filter(all_wt, all_wt$Prediction == 'no_normalbad'))
num_no_normalbad_ura10 = nrow(dplyr::filter(classes_his3_only, classes_his3_only$Prediction == 'no_normalbad'))
wt_cellcounts_df = rbind(wt_cellcounts_df, data.frame("Marker" = marker,
"Plate" = plate,
"Total Num. Perimeter Cells" = num_perimeter,
"Total Num. URA10 Cells" = num_ura10,
"Bad Cells (Perimeter)" = num_bad_perimeter,
"Bad Cells (HIS3)" = num_bad_ura10,
"No_NormalBad Cells (Perimeter)" = num_no_normalbad_perimeter,
"No_NormalBad Cells (HIS3)" = num_no_normalbad_ura10,
"% Bad Cells (Perimeter)" = (num_bad_perimeter/num_perimeter)*100,
"% Bad Cells (HIS3)" = (num_bad_ura10/num_ura10)*100,
"% Bad + No_NormalBad Cells (Perimeter)" = ((num_no_normalbad_perimeter + num_bad_perimeter)/num_perimeter)*100,
"% Bad + No_NormalBad Cells (HIS3)" = ((num_no_normalbad_ura10 + num_bad_ura10)/num_ura10)*100))
print(plate)
}
}
colnames(wt_cellcounts_df) = c("Marker",
"Plate",
"Total Num. Perimeter Cells",
"Total Num. URA10 Cells",
"Bad Cells (Perimeter)",
"Bad Cells (URA10)",
"No_NormalBad Cells (Perimeter)",
"No_NormalBad Cells (URA10)",
"% Bad Cells (Perimeter)",
"% Bad Cells (URA10)",
"% Bad + No_NormalBad Cells (Perimeter)",
"% Bad + No_NormalBad Cells (URA10)")
setwd("C:/Users/peree/OneDrive/Desktop/CompBio_Code/myra_tasks")
openxlsx::write.xlsx(wt_cellcounts_df, file = "wt_cellcounts_ura10.xlsx")
wt_cellcounts_df = data.frame(matrix(nrow = 0,
ncol = 12,
dimnames = list(c(), c("Marker",
"Plate",
"Total Num. Perimeter Cells",
"Total Num. URA10 Cells",
"Bad Cells (Perimeter)",
"Bad Cells (URA10)",
"No_NormalBad Cells (Perimeter)",
"No_NormalBad Cells (URA10)",
"% Bad Cells (Perimeter)",
"% Bad Cells (URA10)",
"% Bad + No_NormalBad Cells (Perimeter)",
"% Bad + No_NormalBad Cells (URA10)"))))
screens = c("Screens_Sac6", "Screens_Snf7", "Screens_Vph1")
for (screen in screens) {
screen_dir = paste(root_dir, screen, sep = "/")
plates = list.files(screen_dir)
marker = strsplit(screen, split = "_")[[1]][2] # get marker name
total_wt = c()
bad_wt = c()
no_normalbad_wt = c()
for (plate in plates) {
classifications_path = paste(screen_dir, plate, "Predictions_normal_bad.csv", sep = "/")
classes = read.csv(file = classifications_path)
classes_ura10_only = dplyr::filter(classes, classes$Name == "URA10")
wt_top = dplyr::filter(classes, classes$Row == 1)
wt_bottom = dplyr::filter(classes, classes$Row == 16)
wt_left = dplyr::filter(classes, classes$Column == 1)
wt_left = dplyr::filter(wt_left, wt_left$Row != 1)
wt_left = dplyr::filter(wt_left, wt_left$Row != 16)
wt_right = dplyr::filter(classes, classes$Column == 24)
wt_right = dplyr::filter(wt_right, wt_right$Row != 1)
wt_right = dplyr::filter(wt_right, wt_right$Row != 16)
all_wt = data.frame(matrix(nrow = 0, ncol = 13, dimnames = list(c(), colnames(wt_top))))
all_wt = rbind(all_wt, wt_top, wt_bottom, wt_left, wt_right)
num_perimeter = nrow(all_wt)
num_ura10 = nrow(classes_ura10_only)
num_bad_perimeter = nrow(dplyr::filter(all_wt, all_wt$Prediction == 'bad'))
num_bad_ura10 = nrow(dplyr::filter(classes_ura10_only, classes_ura10_only$Prediction == 'bad'))
num_no_normalbad_perimeter = nrow(dplyr::filter(all_wt, all_wt$Prediction == 'no_normalbad'))
num_no_normalbad_ura10 = nrow(dplyr::filter(classes_ura10_only, classes_ura10_only$Prediction == 'no_normalbad'))
wt_cellcounts_df = rbind(wt_cellcounts_df, data.frame("Marker" = marker,
"Plate" = plate,
"Total Num. Perimeter Cells" = num_perimeter,
"Total Num. URA10 Cells" = num_ura10,
"Bad Cells (Perimeter)" = num_bad_perimeter,
"Bad Cells (URA10)" = num_bad_ura10,
"No_NormalBad Cells (Perimeter)" = num_no_normalbad_perimeter,
"No_NormalBad Cells (URA10)" = num_no_normalbad_ura10,
"% Bad Cells (Perimeter)" = (num_bad_perimeter/num_perimeter)*100,
"% Bad Cells (URA10)" = (num_bad_ura10/num_ura10)*100,
"% Bad + No_NormalBad Cells (Perimeter)" = ((num_no_normalbad_perimeter + num_bad_perimeter)/num_perimeter)*100,
"% Bad + No_NormalBad Cells (URA10)" = ((num_no_normalbad_ura10 + num_bad_ura10)/num_ura10)*100))
print(plate)
}
}
colnames(wt_cellcounts_df) = c("Marker",
"Plate",
"Total Num. Perimeter Cells",
"Total Num. URA10 Cells",
"Bad Cells (Perimeter)",
"Bad Cells (URA10)",
"No_NormalBad Cells (Perimeter)",
"No_NormalBad Cells (URA10)",
"% Bad Cells (Perimeter)",
"% Bad Cells (URA10)",
"% Bad + No_NormalBad Cells (Perimeter)",
"% Bad + No_NormalBad Cells (URA10)")
setwd("C:/Users/peree/OneDrive/Desktop/CompBio_Code/myra_tasks")
openxlsx::write.xlsx(wt_cellcounts_df, file = "wt_cellcounts_ura10.xlsx")
install.packages("openxlsx")
setwd("C:/Users/peree/OneDrive/Desktop/CompBio_Code/array_mapping_files")
read.csv("TS-Array-Morphology-v2-384.csv")
TSv2 = read.csv("TS-Array-Morphology-v2-384.csv")
library(dplyr)
TSv2_filter = dplyr::filter(TSv2, TSv2$Plate == 1)
wt_top = dplyr::filter(TSv2_filter, TSv2_filter$Row == 1)
wt_bottom = dplyr::filter(TSv2_filter, TSv2_filter$Row == 16)
wt_left = dplyr::filter(TSv2_filter, TSv2_filter$Column == 1)
wt_left = dplyr::filter(wt_left, wt_left$Row != 1)
wt_left = dplyr::filter(wt_left, wt_left$Row != 16)
wt_right = dplyr::filter(TSv2_filter, TSv2_filter$Column == 24)
wt_right = dplyr::filter(wt_right, wt_right$Row != 1)
wt_right = dplyr::filter(wt_right, wt_right$Row != 16)
all_wt = data.frame(matrix(nrow = 0, ncol = 13, dimnames = list(c(), colnames(wt_top))))
all_wt = rbind(all_wt, wt_top, wt_bottom, wt_left, wt_right)
View(wt_right)
wt_top = dplyr::filter(TSv2_filter, TSv2_filter$Row == 1)
wt_bottom = dplyr::filter(TSv2_filter, TSv2_filter$Row == 16)
wt_left = dplyr::filter(TSv2_filter, TSv2_filter$Column == 1)
wt_left = dplyr::filter(wt_left, wt_left$Row != 1)
wt_left = dplyr::filter(wt_left, wt_left$Row != 16)
wt_right = dplyr::filter(TSv2_filter, TSv2_filter$Column == 24)
wt_right = dplyr::filter(wt_right, wt_right$Row != 1)
wt_right = dplyr::filter(wt_right, wt_right$Row != 16)
all_wt = data.frame(matrix(nrow = 0, ncol = 7, dimnames = list(c(), colnames(wt_top))))
all_wt = rbind(all_wt, wt_top, wt_bottom, wt_left, wt_right)
View(all_wt)
TSv2_filter = dplyr::filter(TSv2, TSv2$Plate == 3)
wt_top = dplyr::filter(TSv2_filter, TSv2_filter$Row == 1)
wt_bottom = dplyr::filter(TSv2_filter, TSv2_filter$Row == 16)
wt_left = dplyr::filter(TSv2_filter, TSv2_filter$Column == 1)
wt_left = dplyr::filter(wt_left, wt_left$Row != 1)
wt_left = dplyr::filter(wt_left, wt_left$Row != 16)
wt_right = dplyr::filter(TSv2_filter, TSv2_filter$Column == 24)
wt_right = dplyr::filter(wt_right, wt_right$Row != 1)
wt_right = dplyr::filter(wt_right, wt_right$Row != 16)
all_wt = data.frame(matrix(nrow = 0, ncol = 7, dimnames = list(c(), colnames(wt_top))))
all_wt = rbind(all_wt, wt_top, wt_bottom, wt_left, wt_right)
View(all_wt)
View(TSv2_filter)
TSv2_filter_his = dplyr::filter(TSv2_filter, TSv2_filter$Name == "HIS3")
View(TSv2_filter_his)
